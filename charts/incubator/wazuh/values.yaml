# ==== Images ==== #

managerImage:
  repository: wazuh/wazuh-manager
  pullPolicy: IfNotPresent
  tag: 4.7.2@sha256:238c2f30c4a677e57467eaac5794be579d3ca6a58e4fc7dd54d470bce267f4c0
indexerImage:
  repository: wazuh/wazuh-indexer
  pullPolicy: IfNotPresent
  tag: 4.7.2@sha256:66c3e10254bebd4eeb45d609e6db77dd5bce8cad60a11261e31aa766a2b0ed8a
dashboardImage:
  repository: wazuh/wazuh-dashboard
  pullPolicy: IfNotPresent
  tag: 4.7.2@sha256:7564058b4e00b1fdb39da9faa232d99addc611dcbd04ef559df5387d4eda8740
busyboxImage:
  repository: busybox
  tag: latest
  pullPolicy: IfNotPresent
alpineImage:
  repository: alpine
  tag: latest
  pullPolicy: IfNotPresent

# ==== Values linked to questions.yaml ==== #

wazuh:
  credentials:
    # Only works on initial install
    username: "kibanaserver" # Do not modify this username as it may make your Wazuh installation unstable.
    password: "kibanaserver"
  outposts:
    indexer:
      enabled: true
      # Only works on initial install
      username: "admin" # Do not modify this username as it may make your Wazuh installation unstable.
      password: "SecretPassword"
    manager:
      enabled: true
      # Only works on initial install
      username: "wazuh-wui" # Do not modify this username as it may make your Wazuh installation unstable.
      password: "MyS3cr37P450r.*-"

# ==== Workload ==== #

workload:
# ==== Debug Container ==== #
  debug:
    enabled: true
    type: Deployment
    strategy: Recreate
    replicas: 1
    podSpec:
      containers:
        debug:
          enabled: true
          primary: true
          imageSelector : alpineImage
          command: ["sh"]
          stdin: true
          tty: true
          probes:
            liveness:
              enabled: false
            readiness:
              enabled: false
            startup:
              enabled: false
# ==== Wazuh Dashboard Deployment ==== #
  main:
    enabled: true
    type: Deployment
    replicas: 1
    primary: true
    podSpec:
      containers:
# ==== Wazuh Dashboard Container ==== #
        main:
          enabled: true
          primary: true
          imageSelector : dashboardImage
          command: /bin/sh
          envFrom:
            - configMapRef:
                name: dashboard-env
            - secretRef:
                name: dashboard-env
# ==== Wazuh Indexer Deployment ==== #
  indexer:
    enabled: true
    type: StatefulSet
    replicas: 1
    podSpec:
      containers:
# ==== Wazuh Indexer Container ==== #
        indexer:
          enabled: true
          primary: true
          imageSelector : indexerImage
          command: /bin/sh
          envFrom:
            - configMapRef:
                name: indexer-env
# ==== Wazuh Manager Deployment ==== #
  manager:
    enabled: true
    type: StatefulSet
    replicas: 1
    podSpec:
      containers:
# ==== Wazuh Manager Container ==== #
        manager:
          enabled: true
          primary: true
          imageSelector : managerImage
          envFrom:
            - configMapRef:
                name: manager-env
            - secretRef:
                name: manager-env
          # args: 
          #   - "--ulimit" 
          #   - "memlock=-1:-1"
          #   - "--ulimit" 
          #   - "nofile=655360:655360"
          securityContext:
            runAsUser: 0
            capabilities:
              drop:
                - ALL
              add:
                - SYS_CHROOT
                - KILL

service:
# ==== Wazuh Dashboard Service ==== #
  main:
    enabled: true
    primary: true
    targetSelector: main
    type: LoadBalancer
    ports:
      main:
        primary: true
        enabled: true
        port: 443
        protocol: https
        targetPort: 5601
        targetSelector: main
# ==== Wazuh Indexer Service ==== #
  indexer:
    enabled: true
    targetSelector: indexer
    type: ClusterIP
    ports:
      indexer:
        enabled: true
        port: 9200
        protocol: https
        targetPort: 9200
        targetSelector: indexer
# ==== Wazuh Manager Service ==== #
  manager:
    enabled: true
    targetSelector: manager
    type: LoadBalancer
    ports:
      agent-connect:
        enabled: true
        port: 1514
        protocol: https
        targetPort: 1514
        targetSelector: manager
      agent-enroll:
        enabled: true
        port: 1515
        protocol: https
        targetPort: 1515
        targetSelector: manager
      syslog-collect:
        enabled: true
        port: 514
        protocol: udp
        targetPort: 514
        targetSelector: manager
      api:
        enabled: true
        port: 55000
        protocol: https
        targetPort: 55000
        targetSelector: manager

# ==== Security Context ==== #

securityContext:
  privileged: false
  container:
    runAsGroup: 1000
    runAsUser: 1000
    runAsNonRoot: true
    readOnlyRootFilesystem: false
  pod:
    fsGroup: 1000

portal:
  open:
    enabled: false